
/**/
class HSVSelector: Element 
{
    this var hue = 0; // 0..360
    this var val = 0.0; // 0..1.0
    this var sat = 0.0; // 0..1.0

    function attached() {
        var me = this;
        $(div.value) << event mousedown(evt) {
            var (w,h) = this.box(#dimension);
            me.val = 1.0 - (evt.y + 0.5) / h.toFloat(); 
            me.sat = 1.0 - (evt.x + 0.5) / w.toFloat(); 
				 
	         /* ----------------- */
		    stdout.println("clicked saturation: " + me.sat);
		    stdout.println("clicked value: " + me.val);
                 /* ----------------- */
			 
            me.$(div.pointer).style.set {
                margin-left: evt.x,
                margin-top: evt.y,
            };
        };
    }

    event change $(input.hue) (evt, elHue) {
        this.hue = elHue.value;
			  
	    /* ----------------- */
	    stdout.println("clicked hue: " + this.hue);
	    /* ----------------- */
				
        var color = Color.hsv(this.hue,1,1);
        this.style.variable("hue", color);
    }

    property value(v) {
        get return Color.hsv( this.hue, this.sat, this.val );
        set {
                // left as an exercise for the reader 
        }
    }
}
